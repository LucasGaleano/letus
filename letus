#! /usr/bin/env python3


import socket
from args import argsParser
from threading import Thread
import os
import logging

HOST = '192.168.0.27'
PORT = 4444

totalWork = 20
work = [x for x in range(1,totalWork) if x%2==1]
args = argsParser()

def main():
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        s.bind((HOST,PORT))
        print('[+] listening connection on ' + HOST)
        while True:
            conn, addr = listen(s)
            print(f'[+] node connected with ip: {addr}')
            Thread(target=workToDo, args=(conn,addr,)).start()


def workToDo(conn, addr):
    print('[+] start thread')
    with conn:
        with open('pass.lst') as file:
            print('sending hash')
            conn.send(file.read().encode())
        print(f'Node {addr[0]}: {conn.recv(1024).decode()}')
        while True:
            try:
                if not work:
                    print('[+] no more work to do')
                    os._exit(0)
                    break
                currentWork = work.pop()
                command = f'{args.command} --node:{currentWork}/{totalWork}'

                print(f'[+] send work {currentWork} to node {addr}')
                conn.send(command.encode())
                data = conn.recv(1024).decode()
                print(f'[+] Status: {data}')
                print(f'[+] node {addr} finish the work: {currentWork}')
                print('-------------------------------------------------')

            except Exception as e:
                print(f'[-] Disconnected node {addr}')
                print(e)
                break

def listen(s):
    s.listen()
    return s.accept()

if __name__ == "__main__":
    main()
